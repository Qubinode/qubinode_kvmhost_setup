---

- name: Get all account info
  tags: [ configure_shell, configure_shell_user ]
  getent:
    database: passwd

- name: Run getent for user {{ shell_user }}
  tags: [ configure_shell, configure_shell_user ]
  when: shell_user in (getent_passwd.keys()|list)
  getent:
    fail_key: no
    database: passwd
    key: "{{ shell_user }}"
    split: ":"

- name: Configure user {{ shell_user }} shell
  tags: [ configure_shell, configure_shell_user ]
  when: shell_user in (getent_passwd.keys()|list)
  become: yes
  become_user: "{{ shell_user }}"
  block:
    - name: Set facts about {{ shell_user }}
      tags: [ configure_shell, configure_shell_user ]
      set_fact:
        user_homedir: "{{ getent_passwd[shell_user][4] }}"

    - name: Ensure {{ user_homedir }}/.config exist
      become: no
      file:
        path: "{{ user_homedir }}/.config"
        state: directory
        owner: "{{ shell_user }}"
        mode: 0644

    - name: Deploy Startship config for user {{ shell_user }} 
      template:
        src: starship.toml.j2
        dest: "{{ user_homedir }}/.config/starship.toml"
        owner: "{{ shell_user }}"
        mode: 0644

    - name: Deploy bash_profile for user {{ shell_user }} 
      template:
        src: bash_profile.j2
        dest: "{{ user_homedir }}/.bash_profile"
        owner: "{{ shell_user }}"
        mode: 0644

    - name: Install vimplug plugin manager for user {{ shell_user }} 
      vars:
        plug_url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      command: curl -fLo ~/.vim/autoload/plug.vim --create-dirs {{ plug_url }}
      args:
        creates: "{{ user_homedir }}/.vim/autoload/plug.vim"
        warn: no

    - name: Deploy bashrc for user {{ shell_user }} 
      vars:
        synth_shell_dir: "{{ user_homedir }}/.config"
      template:
        src: bashrc.j2
        dest: "{{ user_homedir }}/.bashrc"
        owner: "{{ shell_user }}"
        mode: 0644

    - name: Deploy vimrc for user {{ shell_user }}
      template:
        src: vimrc.j2
        dest: "{{ user_homedir }}/.vimrc"
        owner: "{{ shell_user }}"
        mode: 0644

    - name: Extract vim.zip to {{ user_homedir }}
      unarchive:
        src: vim.zip
        dest: "{{ user_homedir }}"
        owner: "{{ shell_user }}"

    - name: check if powerline font is installed for user {{ shell_user }}
      stat:
        path: "{{ user_homedir }}/.local/share/fonts/ter-powerline-x12b.pcf.gz"
      register: powerline_font

    - name: Install powerline fonts for user {{ shell_user }}
      when: powerline_font.stat.exists == False
      block:
        - name: Ensure {{ user_homedir }}/.config/fontconfig/conf.d
          file:
            path: "{{ user_homedir }}/.config/fontconfig/conf.d"
            state: directory
            mode: '0755'
        - name: Download powerline fontconfig for user {{ shell_user }} 
          get_url:
            url: https://raw.githubusercontent.com/powerline/fonts/master/fontconfig/50-enable-terminess-powerline.conf
            dest: "{{ user_homedir }}/.config/fontconfig/conf.d/50-enable-terminess-powerline.conf"
        - name: Run powerline fonts install.sh for user {{ shell_user }} 
          shell: "{{ powerline_tmp_dir }}/fonts/install.sh"
          args:
            chdir: "{{ powerline_tmp_dir }}/fonts"
            creates: "{{ user_homedir }}/.local/share/fonts/ter-powerline-x12b.pcf.gz"

    - name: Add user {{ shell_user }} to libvirt groups
      become: yes
      become_user: root
      user:
        name: "{{ shell_user }}"
        groups: libvirt,qemu
        append: yes