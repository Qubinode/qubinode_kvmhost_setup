---
- name: Testing 'kvm_host_ip' KVM host ip
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_ip' KVM host ip"
  when: kvm_host_ip |length == 0

- name: Testing 'kvm_host_interface' KVM host interface
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_interface' KVM host interface"
  when: kvm_host_interface |length == 0

- name: Testing 'kvm_host_mask_prefix' KVM subnet mask prefix"
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_mask_prefix' KVM subnet mask prefix"
  when: kvm_host_mask_prefix is undefined

- name: Testing 'kvm_host_gw' KVM host kvm host gateway"
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_gw' KVM host kvm host gateway"
  when: kvm_host_gw |length == 0

- name: Testing 'admin_user' ssh username"
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'admin_user' ssh username"
  when: admin_user |length == 0

- name: Testing 'kvm_host_domain' kvm host domain
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_domain' kvm host domain"
  when: kvm_host_domain |length == 0

- name: Testing 'kvm_host_dns_servers'
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_dns_servers' kvm host dns server"
  when: kvm_host_dns_servers |length == 0

- name: Testing 'kvm_host_bootproto' KVM host bootproto
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_host_bootproto' KVM host bootproto"
  when: kvm_host_bootproto |length == 0

- name: Testing 'kvm_bridge_type' KVM  bridge type
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'kvm_bridge_type' KVM  bridge type"
  when: kvm_bridge_type |length == 0

- name: Testing 'qubinode_bridge_name' qubinode bridge name
  tags: verify_variables
  fail: msg="Bailing out. this play requires 'qubinode_bridge_name' qubinode bridge name"
  when: qubinode_bridge_name |length == 0


# TODO: this section might need to be replaced
- name: ensureing the libvirt_host_networks values are not empty if defined
  tags: verify_variables
  assert:
    that:
      - item.mac |length != 0
      - item.name |length != 0
      - item.create is defined
      - item.mode |length != 0
      - item.bridge_device |length != 0
      - item.ifcfg_type |length != 0
      - item.subnet |length != 0
      - item.mask |length != 0
      - item.mask_prefix | int
      - item.gateway |length != 0
      - item.ifcfg_bootproto |length != 0
      - item.bridge_slave_dev |length != 0
      - item.ipaddress |length != 0
    fail_msg: msg="'Please ensure the varaible libvirt_host_networks is setup correctly."
    success_msg: "'the libvirt_host_networks var is setup correctly'"
  loop: "{{ libvirt_host_networks }}"
